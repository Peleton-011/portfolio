---
import { getLangFromUrl } from "../i18n/utils";

const lang = getLangFromUrl(Astro.url);

const LANGUAGES = [
	{
		name: "English",
		location: "United States",
		icon: "ðŸ‡ºðŸ‡¸",
		code: "en",
	},
	{
		name: "EspaÃ±ol",
		location: "EspaÃ±a",
		icon: "ðŸ‡ªðŸ‡¸",
		code: "es",
	},
];

interface props {
	ddshowName?: boolean;
	ddshowLocation?: boolean;
	btnshowName?: boolean;
	btnshowLocation?: boolean;
}

const { ddshowName, ddshowLocation, btnshowName, btnshowLocation } =
	Astro.props;
---

<details class="relative opacity-100">
	<summary
		class="inline-flex items-center font-medium justify-center text-sm rounded-lg cursor-pointer list-none"
	>
		{
			LANGUAGES.filter((v) => v.code === lang).map((language) => (
				<>
					{language.icon && (
						<span class="text-2xl">{language.icon} </span>
					)}

					{btnshowName && (
						<span class="hidden md:block ml-2">
							{language.name}
						</span>
					)}
					{btnshowLocation && (
						<span class="hidden lg:block ml-2">
							({language.location})
						</span>
					)}
				</>
			))
		}
	</summary>

	<!-- Dropdown -->
	<ul
		class={`absolute left-0 mt-2 rounded-lg shadow-lg backdrop-blur-sm
        bg-[#1c1b22]/80 `}
	>
		{
			LANGUAGES.map((language) => (
				<li>
					<a
						href={`/${language.code}/`}
						class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 dark:text-gray-400 dark:hover:bg-gray-600 dark:hover:text-white"
					>
						<div class="inline-flex items-center">
							{language.icon && (
								<span class="text-2xl">{language.icon} </span>
							)}

							{ddshowName && (
								<span class="hidden md:block ml-2">
									{language.name}
								</span>
							)}
							{ddshowLocation && (
								<span class="hidden lg:block ml-2">
									({language.location})
								</span>
							)}
						</div>
					</a>
				</li>
			))
		}
	</ul>
</details>
